@model Application.ViewModels.ProductViewModel
@{
    ViewBag.Title = "Create";
}
<h2>@(Model.Id > 0 ? "Edit Product" : "Create Product")</h2>

<div class="form-horizontal">
    <hr />
  
    @Html.ValidationSummary(true) 
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @id = "name" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id, new { htmlAttributes = new { @id = "Id" } })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control", @id = "category" } })
            @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", @id = "price" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.StockCount, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.StockCount, new { htmlAttributes = new { @class = "form-control", @id = "count" } })
            @Html.ValidationMessageFor(model => model.StockCount, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            @*<input type="submit" value="Create"  />*@
            <button onclick="product.createproduct()" class="btn btn-default">@(Model.Id > 0 ? "Update" : "Create")</button>
        </div>
    </div>
</div>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/custom/product.js"></script>

}
